
<% _current = _current||@evolution %>
<% _super = _super||@evolution_super %>
<% _word = _word||_current.class %>

<% currents = _current.class.find(:all, :conditions => {:super_id => _super.id}, :order => "prioritization ASC" ) %>

<% priority_max = _current.class.maximum(:prioritization, :conditions => {:super_id => _super.id}, :order => "prioritization ASC" ) %>

<% counter = 0 %>

<% if priority_max %>

  <% while counter < priority_max %>

    <% counter = counter + 1 %>

      <fieldset><legend><strong>

      <%= _word %>
      (<%= counter %>)
      
      </strong></legend>

      <ol>

      <% currents.each do |one| %>

        <% if one.prioritization == counter %>

	  <% if one.mutations.exists? %>

	    <% two = one.mutations.first %>

	    <%= render :partial => 'mutations/show/agenda', :locals => { 
	      :_current => two, 
	      :_super => one,
	      :_word => "Agenda" } %>

	  <% end %>
	
	<% end %>

      <% end %>

      </ol>

      </fieldset>

  <% end %>

<% end %>

