
<% evolution = evolution||@evolution %>

<% current_evolutions = evolution.class.find(:all, :conditions => {:super_id => evolution.super_id}, :order => "prioritization ASC" ) %>
<% priority_max = evolution.class.maximum(:prioritization, :conditions => {:super_id => evolution.super_id} ) %>
<% counter = 0 %>
<% mutations = [] %>
<% if priority_max %>
  <% while counter < priority_max %>
    <% counter = counter + 1 %>
    <fieldset><legend><strong>Phase(<%= counter %>)</strong></legend><ol>

<% current_evolutions.each do |current_evolution| %>
  <% if current_evolution.prioritization == counter %>
    
    <% mutation_counter = 0 %>
    <% mutation_priority_max = Mutation.maximum(:prioritization, :conditions => { :super_id => current_evolution.id } ) %>

    <% while mutation_counter < mutation_priority_max.to_i %>

      <% mutation_counter = mutation_counter + 1 %>
      <% current_evolution.mutations.each do |current_mutation| %>

        <% if current_mutation.prioritization == mutation_counter %>
          <% mutations = mutations << current_mutation %>
        <% end %>

      <% end %>

      <fieldset><legend><strong>Agenda(<%= mutation_counter %>)</strong></legend><ol>

      <% mutations.each do |mutation| %>
        <p><%= render :partial => mutation %>
      <% end %>
      <% mutations = [] %>
    
      </ol></fieldset>

    <% end %>

  <% end %>
<% end %>


    </ol></fieldset>
  <% end %>
<% end %>

